blueprint:
  name: Philips Tap Dial Switch (Zigbee2MQTT)
  description: 'Control lights with a Philips Hue Tap Switch using Zigbee2MQTT.
    Use the four buttons to control up to four light(s) with an on/off toggle. The dial can be used to dim the most recently used light.
    '
  domain: automation
  input:
    mqtt_topic:
      name: MQTT Topic for device updates
      description: MQTT topic for Philips Hue Tap dial switch. e.g. "zigbee2mqtt/Hue Dial Switch woonkamer"
    first_light:
      name: First Light
      description: The light(s) to control with first button
      selector:
        target:
          entity: {}
    second_light:
      name: (OPTIONAL) Second Light
      description: The light(s) to control with second button
      default: {}
      selector:
        target:
          entity: {}
    third_light:
      name: (OPTIONAL) Third Light
      description: The light(s) to control with third button
      default: {}
      selector:
        target:
          entity: {}
    forth_light:
      name: (OPTIONAL) Forth Light
      description: The light(s) to control with forth button
      default: {}
      selector:
        target:
          entity: {}
    current_light:
      name: (OPTIONAL) Current Light
      description:
        'Text helper to track the current light to dim. Set for the dimmer controls to change which light they are controlling according to the last one turned on.'
      default:
      selector:
        entity:
          domain: input_text
    dim_scale:
      name: Diming Scale
      description: Scale factor for the dimming. This value will be multiplied by the value given from the dial. So lower number, more gradual dimming. Larger number, faster dimming.
      default: 1.0
      selector:
        number:
          min: 0.0
          max: 5.0
          step: 0.01
mode: restart
max_exceeded: silent
variables:
  first_light: !input "first_light"
  second_light: !input "second_light"
  third_light: !input "third_light"
  forth_light: !input "forth_light"
  current_light: !input "current_light"
  dim_scale: !input "dim_scale"
  lights:
    first_light: !input "first_light"
    second_light: !input "second_light"
    third_light: !input "third_light"
    forth_light: !input "forth_light"
trigger:
  - platform: mqtt
    topic: !input mqtt_topic
    value_template: "{{ value_json.action }}"
action:
  - service: persistent_notification.create
    data:
      message: "Action received: {{ trigger.payload }}"
      title: "Tap Dial Debug"
  - variables:
      action: "{{ trigger.payload }}"
      step_size: "{{ trigger.payload_json.step_size | default(1) }}"
      step_mode: "{{ trigger.payload_json.step_mode | default('up') }}"
      button: "{{ trigger.payload_json.button | default(1) }}"
  - choose:
      - conditions:
          - "{{ action == 'button_1_single_press' }}"
        sequence:
          - service: light.toggle
            target: !input "first_light"
          - choose:
              - conditions: "{{ current_light != none }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input "current_light"
                    data:
                      value: first_light
      - conditions:
          - "{{ action == 'button_2_single_press' }}"
          - "{{ second_light != none }}"
        sequence:
          - service: light.toggle
            target: !input "second_light"
          - choose:
              - conditions: "{{ current_light != none }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input "current_light"
                    data:
                      value: second_light
      - conditions:
          - "{{ action == 'button_3_single_press' }}"
          - "{{ third_light != none }}"
        sequence:
          - service: light.toggle
            target: !input "third_light"
          - choose:
              - conditions: "{{ current_light != none }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input "current_light"
                    data:
                      value: third_light
      - conditions:
          - "{{ action == 'button_4_single_press' }}"
          - "{{ forth_light != none }}"
        sequence:
          - service: light.toggle
            target: !input "forth_light"
          - choose:
              - conditions: "{{ current_light != none }}"
                sequence:
                  - service: input_text.set_value
                    target:
                      entity_id: !input "current_light"
                    data:
                      value: forth_light
      - conditions:
          - "{{ action == 'dial_rotate_right_step' or action == 'dial_rotate_right_slow' or action == 'dial_rotate_right_fast' }}"
        sequence:
          - choose:
              - conditions: "{{ current_light != none }}"
                sequence:
                  - service: light.turn_on
                    target: "{{ lights[states(current_light)] }}"
                    data:
                      brightness_step_pct: "{{ step_size * dim_scale }}"
                      transition: 1
            default:
              - service: light.turn_on
                target: !input "first_light"
                data:
                  brightness_step_pct: "{{ step_size * dim_scale }}"
                  transition: 1
      - conditions:
          - "{{ action == 'dial_rotate_left_step' or action == 'dial_rotate_left_slow' or action == 'dial_rotate_left_fast' }}"
        sequence:
          - choose:
              - conditions: "{{ current_light != none }}"
                sequence:
                  - service: light.turn_on
                    target: "{{ lights[states(current_light)] }}"
                    data:
                      brightness_step_pct: "{{ -step_size * dim_scale }}"
                      transition: 1
            default:
              - service: light.turn_on
                target: !input "first_light"
                data:
                  brightness_step_pct: "{{ -step_size * dim_scale }}"
                  transition: 1
